// <auto-generated />
using System;
using InvestMeAPI.Helper;
using InvestMeAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InvestMeAPI.Migrations
{
    [DbContext(typeof(InvestMeContext))]
    [Migration("20190421095755_ProfileV2")]
    partial class ProfileV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Invest_Me_Web_React_Application.Models.Campaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Cardimage");

                    b.Property<string>("Category");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CurrencyUnit")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("PKR");

                    b.Property<string>("Discription");

                    b.Property<DateTime?>("EstimatedFirstProfit")
                        .HasColumnType("date");

                    b.Property<long?>("Fund")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Headerimage");

                    b.Property<long>("Investment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasDefaultValue(0L);

                    b.Property<int>("Likes")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("NeedFundBefore")
                        .HasColumnType("date");

                    b.Property<string>("Stage");

                    b.Property<string>("Summary");

                    b.Property<string>("Tag1");

                    b.Property<string>("Tag2");

                    b.Property<string>("Tag3");

                    b.Property<string>("Title");

                    b.Property<long?>("TotalCost")
                        .HasColumnType("BIGINT");

                    b.Property<int>("UserId");

                    b.Property<int>("Views");

                    b.HasKey("CampaignId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("Invest_Me_Web_React_Application.Models.Category", b =>
                {
                    b.Property<int>("CategoryId");

                    b.Property<string>("Description")
                        .IsUnicode(false);

                    b.Property<string>("Image");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Invest_Me_Web_React_Application.Models.Invester", b =>
                {
                    b.Property<int>("InvesterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaignId");

                    b.Property<decimal>("Investment")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int>("UserId");

                    b.HasKey("InvesterId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("UserId");

                    b.ToTable("Investers");
                });

            modelBuilder.Entity("Invest_Me_Web_React_Application.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FName")
                        .IsRequired();

                    b.Property<string>("Gender");

                    b.Property<string>("LName")
                        .IsRequired();

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .IsUnicode(true);

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .IsUnicode(true);

                    b.Property<string>("PhoneNo");

                    b.Property<string>("ProfilePic");

                    b.Property<string>("Story");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Invest_Me_Web_React_Application.Models.Campaign", b =>
                {
                    b.HasOne("Invest_Me_Web_React_Application.Models.Category")
                        .WithMany("Campaign")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Invest_Me_Web_React_Application.Models.User", "User")
                        .WithMany("Campaign")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Entrepreneur_User");
                });

            modelBuilder.Entity("Invest_Me_Web_React_Application.Models.Invester", b =>
                {
                    b.HasOne("Invest_Me_Web_React_Application.Models.Campaign", "Campaign")
                        .WithMany("Invester")
                        .HasForeignKey("CampaignId")
                        .HasConstraintName("FK_Invester_campaign");

                    b.HasOne("Invest_Me_Web_React_Application.Models.User", "User")
                        .WithMany("Invester")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Invester_User");
                });
#pragma warning restore 612, 618
        }
    }
}
